/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import type { Context } from './../src/libs/context'

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CategoryAddInput: {
    // input type
    id?: number | null // Int
    name: string // String!
  }
  CategoryDeleteInput: {
    // input type
    id: number // Int!
  }
  CategoryPageInput: {
    // input type
    name?: string | null // String
  }
  LoginInput: {
    // input type
    password: string // String!
    username: string // String!
  }
  Page: {
    // input type
    pageCurrent: number // Int!
    pageSize: number // Int!
  }
  PostAddInput: {
    // input type
    categoryId: number // Int!
    content?: string | null // String
    id?: number | null // Int
    title: string // String!
  }
  PostPageInput: {
    // input type
    categoryId?: number | null // Int
    keyword?: string | null // String
  }
}

export interface NexusGenEnums {}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Category: {
    // root type
    id: number // Int!
    name: string // String!
  }
  CategoryDeleteResponse: {
    // root type
    message: string // String!
  }
  CategoryPageResponse: {
    // root type
    current: number // Int!
    pageSize: number // Int!
    records: NexusGenRootTypes['Category'][] // [Category!]!
    total: number // Int!
  }
  LoginResponse: {
    // root type
    message: string // String!
  }
  MeResponse: {
    // root type
    id?: number | null // Int
    username?: string | null // String
  }
  Mutation: {}
  Post: {
    // root type
    authorId: number // Int!
    categoryId: number // Int!
    content?: string | null // String
    id: number // Int!
    published: boolean // Boolean!
    title: string // String!
  }
  PostPageResponse: {
    // root type
    current: number // Int!
    pageSize: number // Int!
    records: Array<NexusGenRootTypes['Post'] | null> // [Post]!
    total: number // Int!
  }
  Query: {}
  User: {
    // root type
    email: string // String!
    id: number // Int!
    password: string // String!
    username: string // String!
  }
  _service: {
    // root type
    sdl: string // String!
  }
}

export interface NexusGenInterfaces {}

export interface NexusGenUnions {}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Category: {
    // field return type
    id: number // Int!
    name: string // String!
  }
  CategoryDeleteResponse: {
    // field return type
    message: string // String!
  }
  CategoryPageResponse: {
    // field return type
    current: number // Int!
    pageSize: number // Int!
    records: NexusGenRootTypes['Category'][] // [Category!]!
    total: number // Int!
  }
  LoginResponse: {
    // field return type
    message: string // String!
  }
  MeResponse: {
    // field return type
    id: number | null // Int
    username: string | null // String
  }
  Mutation: {
    // field return type
    categoryAdd: NexusGenRootTypes['Category'] // Category!
    categoryDelete: NexusGenRootTypes['CategoryDeleteResponse'] // CategoryDeleteResponse!
    login: NexusGenRootTypes['LoginResponse'] // LoginResponse!
    postAdd: NexusGenRootTypes['Post'] // Post!
  }
  Post: {
    // field return type
    author: string // String!
    authorId: number // Int!
    category: string // String!
    categoryId: number // Int!
    content: string | null // String
    id: number // Int!
    published: boolean // Boolean!
    title: string // String!
  }
  PostPageResponse: {
    // field return type
    current: number // Int!
    pageSize: number // Int!
    records: Array<NexusGenRootTypes['Post'] | null> // [Post]!
    total: number // Int!
  }
  Query: {
    // field return type
    _service: NexusGenRootTypes['_service'] | null // _service
    categoryList: NexusGenRootTypes['Category'][] // [Category!]!
    categoryPage: NexusGenRootTypes['CategoryPageResponse'] // CategoryPageResponse!
    me: NexusGenRootTypes['MeResponse'] // MeResponse!
    postPage: NexusGenRootTypes['PostPageResponse'] // PostPageResponse!
  }
  User: {
    // field return type
    email: string // String!
    id: number // Int!
    password: string // String!
    posts: Array<NexusGenRootTypes['Post'] | null> // [Post]!
    username: string // String!
  }
  _service: {
    // field return type
    sdl: string // String!
  }
}

export interface NexusGenFieldTypeNames {
  Category: {
    // field return type name
    id: 'Int'
    name: 'String'
  }
  CategoryDeleteResponse: {
    // field return type name
    message: 'String'
  }
  CategoryPageResponse: {
    // field return type name
    current: 'Int'
    pageSize: 'Int'
    records: 'Category'
    total: 'Int'
  }
  LoginResponse: {
    // field return type name
    message: 'String'
  }
  MeResponse: {
    // field return type name
    id: 'Int'
    username: 'String'
  }
  Mutation: {
    // field return type name
    categoryAdd: 'Category'
    categoryDelete: 'CategoryDeleteResponse'
    login: 'LoginResponse'
    postAdd: 'Post'
  }
  Post: {
    // field return type name
    author: 'String'
    authorId: 'Int'
    category: 'String'
    categoryId: 'Int'
    content: 'String'
    id: 'Int'
    published: 'Boolean'
    title: 'String'
  }
  PostPageResponse: {
    // field return type name
    current: 'Int'
    pageSize: 'Int'
    records: 'Post'
    total: 'Int'
  }
  Query: {
    // field return type name
    _service: '_service'
    categoryList: 'Category'
    categoryPage: 'CategoryPageResponse'
    me: 'MeResponse'
    postPage: 'PostPageResponse'
  }
  User: {
    // field return type name
    email: 'String'
    id: 'Int'
    password: 'String'
    posts: 'Post'
    username: 'String'
  }
  _service: {
    // field return type name
    sdl: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    categoryAdd: {
      // args
      input: NexusGenInputs['CategoryAddInput'] // CategoryAddInput!
    }
    categoryDelete: {
      // args
      input: NexusGenInputs['CategoryDeleteInput'] // CategoryDeleteInput!
    }
    login: {
      // args
      input: NexusGenInputs['LoginInput'] // LoginInput!
    }
    postAdd: {
      // args
      input: NexusGenInputs['PostAddInput'] // PostAddInput!
    }
  }
  Query: {
    categoryPage: {
      // args
      input?: NexusGenInputs['CategoryPageInput'] | null // CategoryPageInput
      page?: NexusGenInputs['Page'] | null // Page
    }
    postPage: {
      // args
      input?: NexusGenInputs['PostPageInput'] | null // PostPageInput
      page?: NexusGenInputs['Page'] | null // Page
    }
  }
}

export interface NexusGenAbstractTypeMembers {}

export interface NexusGenTypeInterfaces {}

export type NexusGenObjectNames = keyof NexusGenObjects

export type NexusGenInputNames = keyof NexusGenInputs

export type NexusGenEnumNames = never

export type NexusGenInterfaceNames = never

export type NexusGenScalarNames = keyof NexusGenScalars

export type NexusGenUnionNames = never

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never

export type NexusGenAbstractsUsingStrategyResolveType = never

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context
  inputTypes: NexusGenInputs
  rootTypes: NexusGenRootTypes
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars
  argTypes: NexusGenArgTypes
  fieldTypes: NexusGenFieldTypes
  fieldTypeNames: NexusGenFieldTypeNames
  allTypes: NexusGenAllTypes
  typeInterfaces: NexusGenTypeInterfaces
  objectNames: NexusGenObjectNames
  inputNames: NexusGenInputNames
  enumNames: NexusGenEnumNames
  interfaceNames: NexusGenInterfaceNames
  scalarNames: NexusGenScalarNames
  unionNames: NexusGenUnionNames
  allInputTypes:
    | NexusGenTypes['inputNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['scalarNames']
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames']
  allNamedTypes:
    | NexusGenTypes['allInputTypes']
    | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames']
  abstractTypeMembers: NexusGenAbstractTypeMembers
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType
  features: NexusGenFeaturesConfig
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<
    TypeName extends string,
    FieldName extends string,
  > {}
  interface NexusGenPluginInputFieldConfig<
    TypeName extends string,
    FieldName extends string,
  > {}
  interface NexusGenPluginSchemaConfig {}
  interface NexusGenPluginArgConfig {}
}
